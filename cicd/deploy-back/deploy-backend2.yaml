kind: Deployment
apiVersion: apps/v1
metadata:
  name: backend-v1
  namespace: shopping
  labels:
    app: backend
    app.kubernetes.io/name: app
    app.kubernetes.io/version: v1
    version: v1
  annotations:
    deployment.kubernetes.io/revision: '13'
    kubesphere.io/creator: admin
    servicemesh.kubesphere.io/enabled: 'false'
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
      app.kubernetes.io/name: app
      app.kubernetes.io/version: v1
      version: v1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: backend
        app.kubernetes.io/name: app
        app.kubernetes.io/version: v1
        version: v1
      annotations:
        kubesphere.io/restartedAt: '2022-09-30T02:41:48.482Z'
        logging.kubesphere.io/logsidecar-config: '{}'
        sidecar.istio.io/inject: 'false'
    spec:
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
        - name: volume-alacog
          persistentVolumeClaim:
            claimName: public-file
        - name: volume-e17jx2
          persistentVolumeClaim:
            claimName: private-file
      containers:
        - name: container-y0dqta
          image: 'qiancui-shopping:backend-2'
          ports:
            - name: http-3001
              containerPort: 3001
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
            - name: volume-alacog
              mountPath: /dist/public
            - name: volume-e17jx2
              mountPath: /dist/private
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Never
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
